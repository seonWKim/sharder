import com.vanniktech.maven.publish.SonatypeHost

plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '3.2.2'
    id "com.vanniktech.maven.publish" version "0.28.0"
}

mavenPublishing {
    publishToMavenCentral(SonatypeHost.S01)

    signAllPublications()

    coordinates(project.group as String, project.name, project.version as String)

    pom {
        name = "Sharder"
        description = "Sharder is an easy-to-use library to handle application level database sharding."
        inceptionYear = "2024"
        licenses {
            license {
                name = "Apache License, Version 2.0"
                url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
            }
        }
        developers {
            developer {
                id = "seonWKim"
                name = "Seon Woo Kim"
                email = "seonwoo960000.kim@gmail.com"
            }
        }
        scm {
            url = "https://github.com/seonWKIm/sharder.git/"
            connection = "scm:git:git:github.com/seonWKim/sharder.git"
            developerConnection = "scm:git:ssh://github.com/seonWKim/sharder.git"
        }
    }

    repositories {
        maven {
            def isSnapshot = project.version.endsWith("-SNAPSHOT")
            url = isSnapshot ?
                    uri("https://s01.oss.sonatype.org/content/repositories/snapshots/") :
                    uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = project.properties["mavenCentralUsername"]
                password = project.properties["mavenCentralPassword"]
            }
        }
    }
}

allprojects {
    repositories {
        mavenCentral()
    }

    tasks.withType(Test) {
        useJUnitPlatform()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    dependencyManagement {
        imports {
            mavenBom 'com.linecorp.armeria:armeria-bom:1.28.1'
        }
    }

    dependencies {
        implementation 'com.linecorp.armeria:armeria-spring-boot3-starter'
        implementation 'com.linecorp.armeria:armeria-logback'
        implementation 'org.springframework.data:spring-data-jdbc:3.2.5'
        implementation 'com.zaxxer:HikariCP:4.0.3'
        implementation 'mysql:mysql-connector-java:8.0.33'

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:3.2.2'
        annotationProcessor 'org.projectlombok:lombok:1.18.32'

        runtimeOnly 'com.linecorp.armeria:armeria-spring-boot3-actuator-starter'
        compileOnly 'org.projectlombok:lombok:1.18.32'

        testImplementation 'org.mockito:mockito-core:5.11.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.2'
        testCompileOnly 'org.projectlombok:lombok:1.18.32'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
    }
}
